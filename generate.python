#!/usr/bin/python
import xml.etree.ElementTree as ET, glob, os, sys, re, csv 
import subprocess

ansi_escape = re.compile(r'\\x1b[^\\r]*')
from datetime import date

# Nicely indents the XML output 
def indent(elem, level=0):
    i = "\n" + level*"\t"
    if len(elem):
        if not elem.text or not elem.text.strip():
            elem.text = i + "\t"
        if not elem.tail or not elem.tail.strip():
            elem.tail = i
        for elem in elem:
            indent(elem, level+1)
        if not elem.tail or not elem.tail.strip():
            elem.tail = i
    else:
        if level and (not elem.tail or not elem.tail.strip()):
            elem.tail = i



# Loop over all files and  create new data
totalcommits = 0
totalplanets = 0
totalsystems = 0
totalbinaries = 0
discoveryyear= {}
for i in range(1992,date.today().year+1):
    discoveryyear[i] = 0

totalconfirmedsystems = 0
totalconfirmedplanets = 0
totalcontributors = []
totalcontributorsemail = []

aliases = []

for filename in glob.glob("open_exoplanet_catalogue/systems/*.xml"):
    metafilename = '/'.join(filename.split("/")[1:])
    f = open(filename, 'rt')
    root = ET.parse(f).getroot()
    f.close()

    metaroot = ET.Element("system")
    systemname = root.findtext("./name").encode('utf-8')
    ET.SubElement(metaroot,"name").text = systemname 
    
    os.popen("git --git-dir=open_exoplanet_catalogue/.git/ --no-pager log '"+metafilename+"' >tmp.txt")
        
    contributors = os.popen("cat tmp.txt | grep '^Author:' | sort |  uniq -c -i ").readlines()


    sys.stdout.write('.')
    sys.stdout.flush()
    print(filename)

    cstag = ET.SubElement(metaroot,"contributors")
    for contributor in contributors:
        if len(contributor.strip())<1:
            continue
        rows= [contributor[0:7], contributor[16:].strip()]
        commits = int(rows[0])
        email = re.search('<(.*)>', rows[1]).group(1)
        name = re.search('(.*) <', rows[1]).group(1).title()
        ctag = ET.SubElement(cstag,"contributor")
        ctag.text = unicode(name,'utf-8')
        ctag.attrib['email'] = email
        ctag.attrib['commits'] = "%d"% commits
        totalcommits += commits
        if not email in totalcontributorsemail:
            totalcontributors.append(name)
            totalcontributorsemail.append(email)


    links = os.popen("cat tmp.txt | grep -oE '\\b(https?)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]*[-A-Za-z0-9+&@#/%=~_|]'").readlines()
    if len(links)>0:
        links = set(links)
        #print "Links: %d" % len(links),
        astag = ET.SubElement(metaroot,"links")
        for link in links:
            atag = ET.SubElement(astag,"link")
            atag.text = unicode(link.strip(),'utf-8')
    
    names = root.findall("./name")
    for name in names:
        aliases.append([name.text.encode('utf-8'),systemname,"system",names[0].text.encode('utf-8')])
        
    
    stars = root.findall(".//star")
    for star in stars:
        names = star.findall("./name")
        for name in names:
            aliases.append([name.text.encode('utf-8'),systemname,"star",names[0].text.encode('utf-8')])

    #print ""
    confirmedsystem = 0
    planets = root.findall(".//planet")
    for planet in planets:
        names = planet.findall("./name")
        for name in names:
            aliases.append([name.text.encode('utf-8'),systemname,"planet",names[0].text.encode('utf-8')])
        lists = planet.findall(".//list")
        totalplanets += 1
        for l in lists:
            if "Confirmed planets" in l.text:
                totalconfirmedplanets += 1
                confirmedsystem = 1
                try:
                    datet = int(planet.findtext("./discoveryyear"))
                    if datet in discoveryyear:
                        discoveryyear[datet] += 1
                except: 
                    pass

    if confirmedsystem==1:
        totalconfirmedsystems += 1
    totalsystems +=1

    binaries = root.findall(".//binary")
    if binaries:
        totalbinaries += 1

    indent(metaroot)
    print(metafilename)
    ET.ElementTree(metaroot).write(metafilename) 
    #if totalsystems >3: break

print("")
statroot = ET.Element("statistiscs")
ET.SubElement(statroot,"commits").text = "%d" % totalcommits
contributors = ET.SubElement(statroot,"contributors")
for c in totalcontributors:
    ET.SubElement(contributors,"contributor").text = unicode(c,'utf-8')
contributors.attrib["num"] = "%d" % len(totalcontributors)
ET.SubElement(statroot,"planets").text = "%d" % totalplanets
ET.SubElement(statroot,"systems").text = "%d" % totalsystems
ET.SubElement(statroot,"binaries").text = "%d" % totalbinaries
dytag = ET.SubElement(statroot,"discoveryyear")
for i in range(1992,date.today().year+1):
    ET.SubElement(dytag,"y%d"%i).text = "%d" % discoveryyear[i]

ET.SubElement(statroot,"confirmedplanets").text = "%d" % totalconfirmedplanets
ET.SubElement(statroot,"confirmedsystems").text = "%d" % totalconfirmedsystems
lastupdate = os.popen("cd ../open_exoplanet_catalogue && git log -1 --date=short --format=%ad").readlines()[0].strip()
ET.SubElement(statroot,"lastupdate").text = lastupdate
ET.SubElement(statroot,"lastcommittimestamp").text = os.popen("cd ../open_exoplanet_catalogue &&  git log -1 --pretty=format:%ct").readlines()[0].strip()

indent(statroot)
ET.ElementTree(statroot).write("statistics.xml") 

with open('aliases.csv', 'wb') as csvfile:
    spamwriter = csv.writer(csvfile, delimiter=',', quoting=csv.QUOTE_MINIMAL)
    spamwriter.writerows(aliases)


